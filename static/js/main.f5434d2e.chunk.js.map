{"version":3,"sources":["dashboard.js","authenticationKeys.js","auth.js","app.js","index.js"],"names":["Dashboard","props","state","username","className","this","userId","userAccessToken","Component","keys","instagramAppId","instagramSecret","redirectUri","Auth","authenticateUser","bind","getUserAccessToken","getUserCode","window","localStorage","getItem","fetch","then","response","Promise","resolve","reject","status","json","Error","data","setState","changeLoggedstate","catch","error","console","log","code","URLSearchParams","location","search","get","postData","client_id","client_secret","grant_type","redirect_uri","method","headers","body","qs","stringify","user_id","access_token","setItem","xhr","XMLHttpRequest","url","addEventListener","responseURL","replace","open","send","type","onClick","App","loggedIn","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5434d2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Dashboard extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      username: '',\n    }\n\n    \n  }\n\n  render() {\n    return (\n      <div>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{this.props.userId}</h5>\n          <h6 className=\"card-subtitle mb-2 text-muted\">{this.props.userAccessToken}</h6>\n          <p className=\"card-text\">Stay Hungry, Stay Foolish</p>\n        </div>\n      </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Dashboard;\n","const keys = {\n  instagramAppId : '534548134144297',\n  instagramSecret : '59b380e96bbb3de5f48ce4438c1916f9',\n  redirectUri : 'https://tantrojan.github.io/'\n}\n\nexport default keys;\n","import React, { Component } from 'react';\nimport keys from './authenticationKeys.js'\nimport qs from 'qs'\n\n\nclass Auth extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      instagramAppId : keys.instagramAppId,\n      instagramSecret : keys.instagramSecret,\n      redirectUri : keys.redirectUri,\n      userId : '',\n      userAccessToken : ''\n    }\n\n    this.authenticateUser = this.authenticateUser.bind(this)\n    this.getUserAccessToken = this.getUserAccessToken.bind(this)\n    this.getUserCode = this.getUserCode.bind(this)\n\n    this.authenticateUser()\n\n\n  }\n  \n  authenticateUser(){\n    let userAccessToken = window.localStorage.getItem('userAccessToken')\n    let userId = window.localStorage.getItem('userId')\n\n    fetch('https://graph.instagram.com/'+userId+'?fields=id,username&access_token='+userAccessToken)\n    .then((response) => {\n      return new Promise((resolve,reject)=>{\n        if(response.status===200)\n        {\n          resolve(response.json());\n        }\n        reject(new Error(\"Couldn't Log In\"))\n      })\n    })\n    .then((data)=>{\n      this.setState({\n        userId : userId,\n        userAccessToken : userAccessToken\n      })\n      this.props.changeLoggedstate()\n    })\n    .catch((error)=>{\n      console.log(error)\n      let params = new URLSearchParams(window.location.search);\n      let code = params.get('code')\n      if(code!==null)\n        this.getUserAccessToken(code)\n    })\n  }\n\n\n  getUserAccessToken(code){\n    let url = 'https://api.instagram.com/oauth/access_token';\n\n    let postData = {\n        client_id: this.state.instagramAppId,\n        client_secret: this.state.instagramSecret,\n        grant_type: 'authorization_code',\n        redirect_uri: this.state.redirectUri,\n        code:code\n    }\n\n    let promise = fetch(url,{\n        method:'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        },\n        body: qs.stringify(postData)\n      }\n    );\n\n    promise.then((response) => {\n      return new Promise((resolve,reject)=>{\n        if(response.status===200)\n        {\n          resolve(response.json());\n        }\n        else\n        {\n          reject(new Error(\"userAccessToken couldn't be fetched\"))\n        }\n      })\n\n    })\n    .then((data)=>{\n      console.log(data)\n      this.setState({\n        userId : data.user_id,\n        userAccessToken : data.access_token\n      })\n      this.props.changeLoggedstate()\n      window.localStorage.setItem('userAccessToken',data.access_token)\n      window.localStorage.setItem('userId',data.user_id)\n    })\n    .catch((error)=>{\n      console.log(error)\n    })\n\n  }\n\n  getUserCode(){\n      let xhr = new XMLHttpRequest();\n      console.log(\"Inside getUserAccessToken\")\n      let url = 'https://api.instagram.com/oauth/authorize?client_id=' + this.state.instagramAppId + '&redirect_uri=' + this.state.redirectUri + '&scope=user_profile,user_media&response_type=code'\n      xhr.addEventListener('load', () => {\n        console.log(xhr.responseURL)\n        window.location.replace(xhr.responseURL)\n      })\n      xhr.open('GET', url)\n      xhr.send()\n  }\n\n  render() {\n    return (\n      <div>\n        <button type=\"button\" onClick={this.getUserCode.bind(this)} className=\"btn btn-primary\">Give Authorization</button>\n      </div>\n    );\n  }\n\n}\n\nexport default Auth;\n","import React, { Component } from 'react';\n\nimport Dashboard from './dashboard.js'\nimport Auth from './auth.js';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userId : '',\n      userAccessToken : '',\n      loggedIn : false,\n    }\n\n  }\n\n  changeLoggedstate(){\n    this.setState({\n      loggedIn:true,\n      userAccessToken : window.localStorage.getItem('userAccessToken'),\n      userId : window.localStorage.getItem('userId')\n    })\n  }\n\n  render() {\n\n    let display;\n    if (this.state.loggedIn===false)\n    {\n      display = <Auth changeLoggedstate ={this.changeLoggedstate.bind(this)}/>\n    }\n    else\n    {\n      display = <Dashboard userId={this.state.userId} userAccessToken={this.state.userAccessToken}/>\n    }\n    return (\n      <div className='container'>\n          {display}\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}